global
  log stdout format raw local0
  user haproxy
  group haproxy
  maxconn 4096
# stats socket /run/haproxy/stats.sock mode 770 level admin uid haproxy gid haproxy

defaults
  log global
  mode tcp
  option tcplog
  option dontlognull
  retries 3
  timeout connect 4s
  timeout client 30s
  timeout server 30s
  timeout http-request 10s
  timeout http-keep-alive 2s
  timeout queue 5s
  timeout tunnel 2m
  timeout client-fin 1s
  timeout server-fin 1s
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxqueue 405 weight 100 # maxqueue = 10% global maxconn

## haproxy

frontend stats
  bind *:6021
  mode http
  option httplog

  stats enable
  stats hide-version
  stats uri /haproxy?stats
  stats refresh 30s
  stats show-legends
  stats show-node
  stats auth admin:NkImb3RjTiNhYTdkWFlER2RaeHZZb0JzKnVlYiFzUyRRTDVtUWkkcG8zdHlYeGJ3Z1RZWiomVXE5S2h5Wl5yN1ZAazYlZXleb0NROWhCekBOYXZwZ3RSZGFuQUNZTk4kbSEyUEtHSzYjV3g2UmRrWEt1Z0B3WHVOOCVlZkskRnc=

## keepalived

frontend healthz
    bind 127.0.0.1:8404
    mode http
    monitor-uri /healthz
    option dontlog-normal

## k8s

frontend k8s-api
  bind *:6443
  default_backend k8s-api

backend k8s-api
  balance roundrobin
  default-server maxconn 75
  option ssl-hello-chk
  server k8s-api-1 192.168.5.12:6443 check on-marked-down shutdown-sessions # mini02
  server k8s-api-2 192.168.5.13:6443 check on-marked-down shutdown-sessions # mini03
  server k8s-api-3 192.168.5.16:6443 check on-marked-down shutdown-sessions # srv01

## traefik

frontend traefik
  bind *:443
  default_backend traefik

  tcp-request inspect-delay 5s
  tcp-request content accept if { req.ssl_hello_type 1 } # Wait for complete client hello (type 1); recommended for content switching.
  tcp-request content reject # Deny clients not sending an SNI header in 5 seconds.

backend traefik
  balance roundrobin
  stick-table type ip size 1m expire 30m # Stick-table of type IP, size 1 million entries, expiration time 30 min.
  stick on src # Sticks sessions based on source IP address.
  stick match src # Matches entries in stick-table based on source IP
  stick store-request src # Stores entries in stick-table based on source IP.
  server traefik-1 192.168.5.12:30443 check on-marked-down shutdown-sessions # mini02
  server traefik-2 192.168.5.13:30443 check on-marked-down shutdown-sessions # mini03
  server traefik-3 192.168.5.16:30443 check on-marked-down shutdown-sessions # srv01

frontend nginx-proxy-01
  bind *:1443
  default_backend nginx-proxy-01

  tcp-request inspect-delay 5s
  tcp-request content accept if { req.ssl_hello_type 1 } # Wait for complete client hello (type 1); recommended for content switching.
  tcp-request content reject # Deny clients not sending an SNI header in 5 seconds.

backend nginx-proxy-01
  balance roundrobin
  stick-table type ip size 1m expire 30m # Stick-table of type IP, size 1 million entries, expiration time 30 min.
  stick on src # Sticks sessions based on source IP address.
  stick match src # Matches entries in stick-table based on source IP
  stick store-request src # Stores entries in stick-table based on source IP.
  server nginx-proxy-1 192.168.5.12:31443 check on-marked-down shutdown-sessions # mini02
  server nginx-proxy-2 192.168.5.16:31443 check on-marked-down shutdown-sessions # srv01
  server nginx-proxy-3 192.168.5.19:31443 check on-marked-down shutdown-sessions # rpi02

frontend nginx-proxy-02
  bind *:1444
  default_backend nginx-proxy-02

  tcp-request inspect-delay 5s
  tcp-request content accept if { req.ssl_hello_type 1 } # Wait for complete client hello (type 1); recommended for content switching.
  tcp-request content reject # Deny clients not sending an SNI header in 5 seconds.

backend nginx-proxy-02
  balance roundrobin
  stick-table type ip size 1m expire 30m # Stick-table of type IP, size 1 million entries, expiration time 30 min.
  stick on src # Sticks sessions based on source IP address.
  stick match src # Matches entries in stick-table based on source IP
  stick store-request src # Stores entries in stick-table based on source IP.
  server nginx-proxy-1 192.168.5.12:31444 check on-marked-down shutdown-sessions # mini02
  server nginx-proxy-2 192.168.5.16:31444 check on-marked-down shutdown-sessions # srv01
  server nginx-proxy-3 192.168.5.19:31444 check on-marked-down shutdown-sessions # rpi02
